// ConsoleApplication6.cpp : 이 파일에는 'main' 함수가 포함됩니다. 거기서 프로그램 실행이 시작되고 종료됩니다.
//

#include "pch.h"
#include <iostream>

int main(void)
{
	/*
	using namespace std;
		unique_ptr<int> p1(new int(10));
		cout << *p1 << '\n'; // 관리하고 있는 객체를 반환합니다
		unique_ptr<int> p2;
		cout << "sp 1: " << p1 << '\n';
		cout << "sp 2: " << p2 << '\n';
		cout << "transfer ownership: \n";
		p2 = move(p1);
		cout << "sp 1: " << p1 << '\n';
		cout << "sp 2: " << p2 << '\n';
		cout << "delete \n";
		p2.reset();
		cout << "sp 1: " << p1 << '\n';
		cout << "sp 2: " << p2 << '\n';
		system("pause");
	*/
	/*
	using namespace std;
	int* arr = new int[10];
	unique_ptr<int> p1(arr);
	for (int i = 0;  i < 10; i++) {
		arr[i] = i;
	}
	for (int i = 0; i < 10; i++) {
		cout << arr[i] << ' ';
	}
	p1.reset();
	cout << '\n';
	for (int i = 0; i < 10; i++) {
		cout << arr[i] << ' ';
	}
	system("pause");
	*/
	using namespace std;
	int*arr = new int(1);
	shared_ptr<int> sp1(arr);
	weak_ptr<int> wp = sp1;
	cout << sp1.use_count() << '\n';
	cout << wp.use_count() << '\n';
	if (true) {
		shared_ptr<int> sp2 = wp.lock();
		cout << sp2.use_count() << '\n';
	}
	cout << sp1.use_count() << '\n';
	cout << wp.use_count() << '\n';
	system("pause");
}

// 프로그램 실행: <Ctrl+F5> 또는 [디버그] > [디버깅하지 않고 시작] 메뉴
// 프로그램 디버그: <F5> 키 또는 [디버그] > [디버깅 시작] 메뉴

// 시작을 위한 팁: 
//   1. [솔루션 탐색기] 창을 사용하여 파일을 추가/관리합니다.
//   2. [팀 탐색기] 창을 사용하여 소스 제어에 연결합니다.
//   3. [출력] 창을 사용하여 빌드 출력 및 기타 메시지를 확인합니다.
//   4. [오류 목록] 창을 사용하여 오류를 봅니다.
//   5. [프로젝트] > [새 항목 추가]로 이동하여 새 코드 파일을 만들거나, [프로젝트] > [기존 항목 추가]로 이동하여 기존 코드 파일을 프로젝트에 추가합니다.
//   6. 나중에 이 프로젝트를 다시 열려면 [파일] > [열기] > [프로젝트]로 이동하고 .sln 파일을 선택합니다.
